---
apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
bootstrapTokens:
  - token: "9a08jv.c0izixklcxtmnze7"
    description: "kubeadm bootstrap token"
    ttl: "24h"
    usages:
      - authentication
      - signing
    groups:
      - system:bootstrappers:kubeadm:default-node-token
nodeRegistration:
  name: "master-01"
  criSocket: "unix:///var/run/containerd/containerd.sock"
  taints: []
  ignorePreflightErrors:
    - IsPrivilegedUser
  imagePullPolicy: "IfNotPresent"
localAPIEndpoint:
  advertiseAddress: "192.168.1.14"   # IP address of the control plane server
  bindPort: 6443                      # Default API server port
certificateKey: "c7b09915bb905c55f87bb012092fc043ad8d74e4d2b172c1131b6d8505a7babf"  # Generated from "kubeadm certs certificate-key"
timeouts:
  controlPlaneComponentHealthCheck: "60s"  # Wait 60 seconds for control plane component health check

---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
kubernetesVersion: "stable"  # Replace this value with specific version if needed
controlPlaneEndpoint: "192.168.1.10:6443"  # LoadBalancer/Public IP OR Private IP
clusterName: "example-cluster"
certificatesDir: "/etc/kubernetes/pki"  # Directory for TLS certificates
imageRepository: "registry.k8s.io"      # Official registry for Kubernetes images
encryptionAlgorithm: ECDSA-P256         # TLS encryption algorithm (recommended)

networking:
  serviceSubnet: "10.96.0.0/16"    # Address range for Services
  podSubnet: "10.244.0.0/16"       # Address range for Pods
  dnsDomain: "cluster.local"       # Internal DNS domain name

etcd:
  external:
    endpoints:
      - "https://192.168.1.11:2379" # Endpoint of the external etcd server
    caFile: "/etc/kubernetes/pki/etcd/ca.pem"
    certFile: "/etc/kubernetes/pki/etcd/etcd.pem"
    keyFile: "/etc/kubernetes/pki/etcd/etcd-key.pem"

apiServer:
  certSANs:
    - "192.168.1.10"  # LoadBalancer/Public IP OR Private IP

# Component configurations
controllerManager: {}
scheduler: {}
dns: {}
proxy:
  disabled: true   # disable kube-proxy
  